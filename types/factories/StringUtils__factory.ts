/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StringUtils, StringUtilsInterface } from "../StringUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "str1_",
        type: "string",
      },
      {
        internalType: "string",
        name: "str2_",
        type: "string",
      },
    ],
    name: "areStringEquals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x3059a0db",
        type: "bytes32",
      },
    ],
    name: "c_0x3059a0db",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str_",
        type: "string",
      },
    ],
    name: "isEmptyString",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610628610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c8063286c80131461005057806383d7b50614610080578063a45f379e1461009c575b600080fd5b61006a600480360381019061006591906104ce565b6100cc565b6040516100779190610590565b60405180910390f35b61009a60048036038101906100959190610460565b6101af565b005b6100b660048036038101906100b19190610489565b6101b2565b6040516100c39190610590565b60405180910390f35b60006100fa7f29a79f788d1dfb26e5683fdc45b47f6d3e2165c51d72af2b1c5662efbf1eb3f760001b6101af565b6101267f77534837b830efdc50a3a5c72e9582357d5b0d14c6b1aa622bc3534f1f3adc6760001b6101af565b6101527fb4936c364152f346797381f4ac0646b261d668cbd50721b3cbcc1310ce26b57360001b6101af565b8282604051602001610165929190610577565b60405160208183030381529060405280519060200120858560405160200161018e929190610577565b60405160208183030381529060405280519060200120149050949350505050565b50565b60006101e07f9c2c9120145459644da19ced8a282c62f3a3f47503058f50c965e283074088bf60001b6101af565b61020c7fa00c07d85c6292b7f2923c80027082c53a48bf5da7b671f70a05ddb17e2b3b0e60001b6101af565b6102387f8280e85a54af213afe081c5646266eb71e35ceb5d68450abfecdb988d3b0093360001b6101af565b600083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505090506102ad7f518c78c77427e106ace2437907bc2fbdbebed2a7c289ca6328619f3fb08c01ce60001b6101af565b6102d97f1a290c5c0c5f6a5746db9599718e15b96eaa99d46f34b161c74015df0b604cee60001b6101af565b6000815114156103715761030f7fe540be16fa2daeaece2112dc49f529f24baea6c69590f4403e2e13c1289b3fb160001b6101af565b61033b7ff5fa236ac1a726f4a998ec3cf6ac9775d5a126e846236269367c9bb7662ad79160001b6101af565b6103677fb70313232c49588b31431745d1621e440cff54c1488fc75b198ba6483a873adf60001b6101af565b60019150506103fb565b61039d7f7b85d25011b3c7a22a93251cf26aed0c1421c5be8b1554919546c50e4866974560001b6101af565b6103c97f8a7315db476bd5b97b1a775855f251183c890d02584cf6a0d9d97e0082bbf45760001b6101af565b6103f57f598390592fe4cbfd03a94acb05ab27de7be8c2cfd840db56766e84f05d85c36f60001b6101af565b60009150505b92915050565b600081359050610410816105db565b92915050565b60008083601f84011261042857600080fd5b8235905067ffffffffffffffff81111561044157600080fd5b60208301915083600182028301111561045957600080fd5b9250929050565b60006020828403121561047257600080fd5b600061048084828501610401565b91505092915050565b6000806020838503121561049c57600080fd5b600083013567ffffffffffffffff8111156104b657600080fd5b6104c285828601610416565b92509250509250929050565b600080600080604085870312156104e457600080fd5b600085013567ffffffffffffffff8111156104fe57600080fd5b61050a87828801610416565b9450945050602085013567ffffffffffffffff81111561052957600080fd5b61053587828801610416565b925092505092959194509250565b61054c816105b6565b82525050565b600061055e83856105ab565b935061056b8385846105cc565b82840190509392505050565b6000610584828486610552565b91508190509392505050565b60006020820190506105a56000830184610543565b92915050565b600081905092915050565b60008115159050919050565b6000819050919050565b82818337600083830152505050565b6105e4816105c2565b81146105ef57600080fd5b5056fea2646970667358221220d847c103588d0c9a9d225e57d4866a9929784da2eca620651e2c281b208ad80d64736f6c63430008040033";

export class StringUtils__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StringUtils> {
    return super.deploy(overrides || {}) as Promise<StringUtils>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StringUtils {
    return super.attach(address) as StringUtils;
  }
  connect(signer: Signer): StringUtils__factory {
    return super.connect(signer) as StringUtils__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StringUtilsInterface {
    return new utils.Interface(_abi) as StringUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StringUtils {
    return new Contract(address, _abi, signerOrProvider) as StringUtils;
  }
}

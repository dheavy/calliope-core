/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestERC20, TestERC20Interface } from "../TestERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xcd28fe33",
        type: "bytes32",
      },
    ],
    name: "c_0xcd28fe33",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001aeb38038062001aeb8339818101604052810190620000379190620003c0565b6040518060400160405280600981526020017f54657374455243323000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f54535400000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb929190620002f9565b508060049080519060200190620000d4929190620002f9565b5050506200010b7fd64452cbcc999e9d991a4a3a735bcb213846735d9dee3afd8d040cb19cd00d2e60001b6200018c60201b60201c565b6200013f7fe99ff9ecf8512c31ecb94c1d672e17491b3838e4e0ae28be21d4e43d76ddb62c60001b6200018c60201b60201c565b620001737f70fc16430c2937e53690649a529642f912274d52150f6d266538a298d90fd40160001b6200018c60201b60201c565b6200018533826200018f60201b60201c565b50620005b2565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000202576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001f99062000424565b60405180910390fd5b6200021660008383620002f460201b60201c565b80600260008282546200022a919062000474565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000281919062000474565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002e8919062000446565b60405180910390a35050565b505050565b8280546200030790620004db565b90600052602060002090601f0160209004810192826200032b576000855562000377565b82601f106200034657805160ff191683800117855562000377565b8280016001018555821562000377579182015b828111156200037657825182559160200191906001019062000359565b5b5090506200038691906200038a565b5090565b5b80821115620003a55760008160009055506001016200038b565b5090565b600081519050620003ba8162000598565b92915050565b600060208284031215620003d357600080fd5b6000620003e384828501620003a9565b91505092915050565b6000620003fb601f8362000463565b915062000408826200056f565b602082019050919050565b6200041e81620004d1565b82525050565b600060208201905081810360008301526200043f81620003ec565b9050919050565b60006020820190506200045d600083018462000413565b92915050565b600082825260208201905092915050565b60006200048182620004d1565b91506200048e83620004d1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620004c657620004c562000511565b5b828201905092915050565b6000819050919050565b60006002820490506001821680620004f457607f821691505b602082108114156200050b576200050a62000540565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b620005a381620004d1565b8114620005af57600080fd5b50565b61152980620005c26000396000f3fe608060405234801561001057600080fd5b50600436106100a45760003560e01c806306fdde03146100a9578063095ea7b3146100c757806318160ddd146100f757806323b872dd14610115578063313ce56714610145578063395093511461016357806370a08231146101935780638c82b158146101c357806395d89b41146101df578063a457c2d7146101fd578063a9059cbb1461022d578063dd62ed3e1461025d575b600080fd5b6100b161028d565b6040516100be9190610f74565b60405180910390f35b6100e160048036038101906100dc9190610d99565b61031f565b6040516100ee9190610f59565b60405180910390f35b6100ff61033d565b60405161010c9190611076565b60405180910390f35b61012f600480360381019061012a9190610d4a565b610347565b60405161013c9190610f59565b60405180910390f35b61014d610448565b60405161015a9190611091565b60405180910390f35b61017d60048036038101906101789190610d99565b610451565b60405161018a9190610f59565b60405180910390f35b6101ad60048036038101906101a89190610ce5565b6104fd565b6040516101ba9190611076565b60405180910390f35b6101dd60048036038101906101d89190610dd5565b610545565b005b6101e7610548565b6040516101f49190610f74565b60405180910390f35b61021760048036038101906102129190610d99565b6105da565b6040516102249190610f59565b60405180910390f35b61024760048036038101906102429190610d99565b6106ce565b6040516102549190610f59565b60405180910390f35b61027760048036038101906102729190610d0e565b6107c8565b6040516102849190611076565b60405180910390f35b60606003805461029c906111e4565b80601f01602080910402602001604051908101604052809291908181526020018280546102c8906111e4565b80156103155780601f106102ea57610100808354040283529160200191610315565b820191906000526020600020905b8154815290600101906020018083116102f857829003601f168201915b5050505050905090565b600061033361032c61084f565b8484610857565b6001905092915050565b6000600254905090565b6000610354848484610a22565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061039f61084f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561041f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041690610ff6565b60405180910390fd5b61043c8561042b61084f565b8584610437919061111e565b610857565b60019150509392505050565b60006012905090565b60006104f361045e61084f565b84846001600061046c61084f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ee91906110c8565b610857565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b50565b606060048054610557906111e4565b80601f0160208091040260200160405190810160405280929190818152602001828054610583906111e4565b80156105d05780601f106105a5576101008083540402835291602001916105d0565b820191906000526020600020905b8154815290600101906020018083116105b357829003601f168201915b5050505050905090565b600080600160006105e961084f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069d90611056565b60405180910390fd5b6106c36106b161084f565b8585846106be919061111e565b610857565b600191505092915050565b60006106fc7f6bce2c100fcd405fc4076613d0d9e8787b6a0a239abce0217be53d3ab1a4236b60001b610545565b6107287f4a223f932b26791de276f540701d2c631a621324f6ff655a8e177b800efe47fe60001b610545565b6107547fda1c30cc2c9d69e2e838633ff75c8a350a50ef01563521a00b04d383cfdd27d860001b610545565b61076661075f61084f565b8484610a22565b6107927f55ffa86c31c5639170d6094afc4e7a54e76846d5ce6ce0f22bc9ad49ed1f1ef760001b610545565b6107be7f31c08288b5a646c12567ba2912c98ab56c3189e207116113379a21ce8b342e2f60001b610545565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108be90611036565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610937576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092e90610fb6565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a159190611076565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8990611016565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af990610f96565b60405180910390fd5b610b0d838383610ca1565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8a90610fd6565b60405180910390fd5b8181610b9f919061111e565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c2f91906110c8565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c939190611076565b60405180910390a350505050565b505050565b600081359050610cb5816114ae565b92915050565b600081359050610cca816114c5565b92915050565b600081359050610cdf816114dc565b92915050565b600060208284031215610cf757600080fd5b6000610d0584828501610ca6565b91505092915050565b60008060408385031215610d2157600080fd5b6000610d2f85828601610ca6565b9250506020610d4085828601610ca6565b9150509250929050565b600080600060608486031215610d5f57600080fd5b6000610d6d86828701610ca6565b9350506020610d7e86828701610ca6565b9250506040610d8f86828701610cd0565b9150509250925092565b60008060408385031215610dac57600080fd5b6000610dba85828601610ca6565b9250506020610dcb85828601610cd0565b9150509250929050565b600060208284031215610de757600080fd5b6000610df584828501610cbb565b91505092915050565b610e0781611164565b82525050565b6000610e18826110ac565b610e2281856110b7565b9350610e328185602086016111b1565b610e3b81611274565b840191505092915050565b6000610e536023836110b7565b9150610e5e82611285565b604082019050919050565b6000610e766022836110b7565b9150610e81826112d4565b604082019050919050565b6000610e996026836110b7565b9150610ea482611323565b604082019050919050565b6000610ebc6028836110b7565b9150610ec782611372565b604082019050919050565b6000610edf6025836110b7565b9150610eea826113c1565b604082019050919050565b6000610f026024836110b7565b9150610f0d82611410565b604082019050919050565b6000610f256025836110b7565b9150610f308261145f565b604082019050919050565b610f448161119a565b82525050565b610f53816111a4565b82525050565b6000602082019050610f6e6000830184610dfe565b92915050565b60006020820190508181036000830152610f8e8184610e0d565b905092915050565b60006020820190508181036000830152610faf81610e46565b9050919050565b60006020820190508181036000830152610fcf81610e69565b9050919050565b60006020820190508181036000830152610fef81610e8c565b9050919050565b6000602082019050818103600083015261100f81610eaf565b9050919050565b6000602082019050818103600083015261102f81610ed2565b9050919050565b6000602082019050818103600083015261104f81610ef5565b9050919050565b6000602082019050818103600083015261106f81610f18565b9050919050565b600060208201905061108b6000830184610f3b565b92915050565b60006020820190506110a66000830184610f4a565b92915050565b600081519050919050565b600082825260208201905092915050565b60006110d38261119a565b91506110de8361119a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561111357611112611216565b5b828201905092915050565b60006111298261119a565b91506111348361119a565b92508282101561114757611146611216565b5b828203905092915050565b600061115d8261117a565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156111cf5780820151818401526020810190506111b4565b838111156111de576000848401525b50505050565b600060028204905060018216806111fc57607f821691505b602082108114156112105761120f611245565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6114b781611152565b81146114c257600080fd5b50565b6114ce81611170565b81146114d957600080fd5b50565b6114e58161119a565b81146114f057600080fd5b5056fea264697066735822122076c9811d72b97517a85ee9755174da6de7584c70c602650436a2e1e9ff75141464736f6c63430008040033";

export class TestERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestERC20> {
    return super.deploy(initialSupply, overrides || {}) as Promise<TestERC20>;
  }
  getDeployTransaction(
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  attach(address: string): TestERC20 {
    return super.attach(address) as TestERC20;
  }
  connect(signer: Signer): TestERC20__factory {
    return super.connect(signer) as TestERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC20Interface {
    return new utils.Interface(_abi) as TestERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC20 {
    return new Contract(address, _abi, signerOrProvider) as TestERC20;
  }
}

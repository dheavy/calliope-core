/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Market, MarketInterface } from "../Market";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "product_",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.Ask",
        name: "ask",
        type: "tuple",
      },
    ],
    name: "AskCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.Ask",
        name: "ask",
        type: "tuple",
      },
    ],
    name: "AskRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.Bid",
        name: "bid",
        type: "tuple",
      },
    ],
    name: "BidCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.Bid",
        name: "bid",
        type: "tuple",
      },
    ],
    name: "BidFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.Bid",
        name: "bid",
        type: "tuple",
      },
    ],
    name: "BidRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "previousOwner",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "creator",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "owner",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.BidShares",
        name: "bidShares",
        type: "tuple",
      },
    ],
    name: "BidShareUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.Bid",
        name: "expectedBid_",
        type: "tuple",
      },
    ],
    name: "acceptBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "previousOwner",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "creator",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "owner",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.BidShares",
        name: "bidShares_",
        type: "tuple",
      },
    ],
    name: "areValidBidShares",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "bidSharesForToken",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "previousOwner",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "creator",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "owner",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.BidShares",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "currentAskForToken",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct IMarket.Ask",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bidder_",
        type: "address",
      },
    ],
    name: "getBidFromBidder",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.Bid",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bidAmount_",
        type: "uint256",
      },
    ],
    name: "isValidBid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "product",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "removeAsk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bidder_",
        type: "address",
      },
    ],
    name: "removeBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct IMarket.Ask",
        name: "ask_",
        type: "tuple",
      },
    ],
    name: "setAsk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.Bid",
        name: "bid_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
    ],
    name: "setBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "previousOwner",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "creator",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "owner",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.BidShares",
        name: "bidShares_",
        type: "tuple",
      },
    ],
    name: "setBidShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.D256",
        name: "sharePercent_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "splitShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021b1380380620021b18339810160408190526200003491620000ce565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b039384166001600160a01b031991821617909155600280548216331790556004805492909316911617905562000105565b80516001600160a01b0381168114620000c957600080fd5b919050565b60008060408385031215620000e1578182fd5b620000ec83620000b1565b9150620000fc60208401620000b1565b90509250929050565b61209c80620001156000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063b920c12311610097578063eb55683a11610066578063eb55683a146102cf578063f2fde38b146102e2578063f9ce0582146102f5578063fc56692c1461032d57600080fd5b8063b920c12314610275578063ba33939914610296578063bdb58698146102a9578063bf9ce952146102bc57600080fd5b8063715018a6116100d3578063715018a6146101ce578063776a0835146101d657806379cef8bd146101e95780638da5cb5b1461025057600080fd5b806302e8fe131461010557806328220f351461012d578063578064f61461014257806362f24b70146101bb575b600080fd5b610118610113366004611dfa565b610340565b60405190151581526020015b60405180910390f35b61014061013b366004611cd6565b61040f565b005b610197610150366004611cd6565b604080518082019091526000808252602082015250600090815260066020908152604091829020825180840190935280548352600101546001600160a01b03169082015290565b60408051825181526020928301516001600160a01b03169281019290925201610124565b6101406101c9366004611d35565b6104ec565b610140610602565b6101406101e4366004611d06565b6106a6565b6101fc6101f7366004611d06565b6108ce565b6040516101249190600060a0820190508251825260208301516001600160a01b0380821660208501528060408601511660408501528060608601511660608501525050608083015151608083015292915050565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610124565b610288610283366004611cac565b610976565b604051908152602001610124565b6101406102a4366004611d97565b610995565b6101406102b7366004611dba565b610bfb565b60015461025d906001600160a01b031681565b6101406102dd366004611d6b565b6112aa565b6101406102f0366004611c1e565b6113de565b610308610303366004611cd6565b6114f8565b6040805182515181526020808401515190820152918101515190820152606001610124565b61011861033b366004611c76565b611583565b60008061034c846114f8565b905061035781611583565b6103bc5760405162461bcd60e51b815260206004820152602b60248201527f4d61726b65743a20696e76616c696420626964207368617265732c206d75737460448201526a02073756d20746f203130360ac1b60648201526084015b60405180910390fd5b821580159061040557506103d4816040015184610976565b81516103e09085610976565b6103ee836020015186610976565b6103f89190611eaa565b6104029190611eaa565b83145b9150505b92915050565b6001546001600160a01b031633146104655760405162461bcd60e51b81526020600482015260196024820152784d61726b65743a2050726f647563742063616c6c206f6e6c7960381b60448201526064016103b3565b807fbf58f6d6c7d7c6efc69e7444efa93ed26d7cdc0e82e12a37df96f36a367561df600660008481526020019081526020016000206040516104c09190815481526001909101546001600160a01b0316602082015260400190565b60405180910390a2600090815260066020526040812090815560010180546001600160a01b0319169055565b6001546001600160a01b031633146105425760405162461bcd60e51b81526020600482015260196024820152784d61726b65743a2050726f647563742063616c6c206f6e6c7960381b60448201526064016103b3565b61054d828235610340565b6105a95760405162461bcd60e51b815260206004820152602760248201527f4d61726b65743a20696e76616c69642041736b20666f722073686172652d73706044820152666c697474696e6760c81b60648201526084016103b3565b600082815260066020526040902081906105c38282612019565b905050817ff7347cb9e91d8cbe995b51920ba5f92cbf84a9e09cbed3cd7a739fef4d1d07cf826040516105f69190611e1b565b60405180910390a25050565b6000546001600160a01b0316331461065c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103b3565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001546001600160a01b031633146106fc5760405162461bcd60e51b81526020600482015260196024820152784d61726b65743a2050726f647563742063616c6c206f6e6c7960381b60448201526064016103b3565b60008281526003602090815260408083206001600160a01b0380861685529252909120805460018201549192909116816107785760405162461bcd60e51b815260206004820152601960248201527f4d61726b65743a2063616e6e6f742072656d6f7665206269640000000000000060448201526064016103b3565b6000819050857fcbebd567b8a5c57f63ec61dc46746aab28daff6bdd1f4a6a0a305c17fa5465c9856040516107e991908154815260018201546001600160a01b0390811660208301526002830154811660408301526003830154166060820152600490910154608082015260a00190565b60405180910390a260008681526003602081815260408084206001600160a01b038a8116808752919093528185208581556001810180546001600160a01b03199081169091556002820180548216905594810180549095169094556004938401949094555163a9059cbb60e01b815291820192909252602481018590529082169063a9059cbb90604401602060405180830381600087803b15801561088d57600080fd5b505af11580156108a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c59190611c56565b50505050505050565b6109086040805160a08101825260008082526020808301829052828401829052606083018290528351908101909352825290608082015290565b5060009182526003602081815260408085206001600160a01b039485168652825293849020845160a081018652815481526001820154851681840152600282015485168187015292810154909316606083015283519081019093526004909101548252608081019190915290565b6000606461098483856115c6565b61098e9190611ec2565b9392505050565b6001546001600160a01b031633146109eb5760405162461bcd60e51b81526020600482015260196024820152784d61726b65743a2050726f647563742063616c6c206f6e6c7960381b60448201526064016103b3565b600082815260036020526040808220908290610a0d9060608601908601611c1e565b6001600160a01b0390811682526020808301939093526040918201600020825160a0810184528154815260018201548316818601526002820154831681850152600382015490921660608301528251938401909252600490910154825260808101919091528051909150610ab95760405162461bcd60e51b815260206004820152601360248201527213585c9ad95d0e881a5b9d985b1a5908189a59606a1b60448201526064016103b3565b80518235148015610aee5750610ad56040830160208401611c1e565b6001600160a01b031681602001516001600160a01b0316145b8015610b0257506080818101515190830135145b8015610b325750610b196080830160608401611c1e565b6001600160a01b031681606001516001600160a01b0316145b610b7e5760405162461bcd60e51b815260206004820152601660248201527f4d61726b65743a20756e6578706563746564206269640000000000000000000060448201526064016103b3565b610b8c838260000151610340565b610be85760405162461bcd60e51b815260206004820152602760248201527f4d61726b65743a20696e76616c69642042696420666f722073686172652d73706044820152666c697474696e6760c81b60648201526084016103b3565b610bf68382604001516115e2565b505050565b6001546001600160a01b03163314610c515760405162461bcd60e51b81526020600482015260196024820152784d61726b65743a2050726f647563742063616c6c206f6e6c7960381b60448201526064016103b3565b6000838152600560209081526040918290208251608081018452815460608201908152815283518084018552600183015481528184015283519283018452600290910154825291820152610ca76012600a611f25565b610cb2906064611fcd565b602082015151610cc790608086013590611eaa565b1115610d3b5760405162461bcd60e51b815260206004820152602f60248201527f4d61726b65743a20696e76616c69642073656c6c2d6f6e2066656520666f722060448201527f73686172652d73706c697474696e67000000000000000000000000000000000060648201526084016103b3565b6000610d4d6060850160408601611c1e565b6001600160a01b03161415610da45760405162461bcd60e51b815260206004820152601660248201527f4d61726b65743a20696e76616c6964206269646465720000000000000000000060448201526064016103b3565b8235610de85760405162461bcd60e51b815260206004820152601360248201527213585c9ad95d0e881a5b9d985b1a5908189a59606a1b60448201526064016103b3565b6000610dfa6040850160208601611c1e565b6001600160a01b03161415610e515760405162461bcd60e51b815260206004820152601860248201527f4d61726b65743a20696e76616c69642063757272656e6379000000000000000060448201526064016103b3565b6004546001600160a01b0316610e6d6040850160208601611c1e565b6001600160a01b031614610ec35760405162461bcd60e51b815260206004820152601d60248201527f4d61726b65743a2063757272656e6379206e6f7420616363657074656400000060448201526064016103b3565b6000610ed56080850160608601611c1e565b6001600160a01b03161415610f2c5760405162461bcd60e51b815260206004820152601d60248201527f4d61726b65743a20696e76616c69642062696420726563697069656e7400000060448201526064016103b3565b600084815260036020526040808220908290610f4e9060608801908801611c1e565b6001600160a01b031681526020810191909152604001600020805490915015610f8557610f85856101e46060870160408801611c1e565b6000610f976040860160208701611c1e565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a082319060240160206040518083038186803b158015610fdc57600080fd5b505afa158015610ff0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110149190611cee565b6040516323b872dd60e01b81526001600160a01b03878116600483015230602483015288356044830152919250908316906323b872dd90606401602060405180830381600087803b15801561106857600080fd5b505af115801561107c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a09190611c56565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a082319060240160206040518083038186803b1580156110e357600080fd5b505afa1580156110f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111b9190611cee565b90506040518060a0016040528083836111349190611fec565b815260200188602001602081019061114c9190611c1e565b6001600160a01b0316815260200161116a60608a0160408b01611c1e565b6001600160a01b0316815260200161118860808a0160608b01611c1e565b6001600160a01b031681526020016111a8368a90038a0160808b01611c91565b905260008981526003602052604080822091906111cb9060608c01908c01611c1e565b6001600160a01b039081168252602080830193909352604091820160002084518155928401516001840180549183166001600160a01b0319928316179055848301516002850180549184169183169190911790556060850151600385018054919093169116179055608090920151516004909101555188907f327bc9021bfbee403a11b13dd6c819999006aff090cc129f07e9f2840af38dd590611270908a90611e47565b60405180910390a26112828888611a8a565b156112a0576112a08861129b60608a0160408b01611c1e565b6115e2565b5050505050505050565b6001546001600160a01b031633146113005760405162461bcd60e51b81526020600482015260196024820152784d61726b65743a2050726f647563742063616c6c206f6e6c7960381b60448201526064016103b3565b61130981611583565b6113695760405162461bcd60e51b815260206004820152602b60248201527f4d61726b65743a20696e76616c696420626964207368617265732c206d75737460448201526a02073756d20746f203130360ac1b60648201526084016103b3565b6000828152600560209081526040918290208351518082558483018051516001840155858501805151600290940193909355845191825251519281019290925251519181019190915282907fdb88d4e96cb8697aaee5e575ee5f460817709a1dfcfbf7ba15192e90b5c86f9f906060016105f6565b6000546001600160a01b031633146114385760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103b3565b6001600160a01b03811661149d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b3565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6115356040805160808101825260006060820181815282528251602080820185528282528084019190915283519081018452908152909182015290565b50600090815260056020908152604091829020825160808101845281546060820190815281528351808401855260018301548152818401528351928301845260029091015482529182015290565b60006115916012600a611f25565b61159c906064611fcd565b8251516040840151516020850151516115b59190611eaa565b6115bf9190611eaa565b1492915050565b805160009061098e9084906115dd6012600a611f25565b611b07565b60008281526003602081815260408084206001600160a01b038681168652908352818520825160a0810184528154815260018083015484168287019081526002840154851683870152968301548416606083015284518087018652600493840154815260808301528988526005909552958390209451935492516331a9108f60e11b81529081018890528382169263a9059cbb921690636352211e9060240160206040518083038186803b15801561169957600080fd5b505afa1580156116ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d19190611c3a565b60408051602081019091526002860154815286516116ef9190610976565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561173557600080fd5b505af1158015611749573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176d9190611c56565b506001546040516366a9e84760e11b8152600481018790526001600160a01b038381169263a9059cbb9291169063cd53d08e9060240160206040518083038186803b1580156117bb57600080fd5b505afa1580156117cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f39190611c3a565b60408051602081019091526001860154815286516118119190610976565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561185757600080fd5b505af115801561186b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188f9190611c56565b5060015460608401516040516377a41d3f60e11b8152600481018890526001600160a01b03918216602482015291169063ef483a7e90604401600060405180830381600087803b1580156118e257600080fd5b505af11580156118f6573d6000803e3d6000fd5b5050604080516020808201835260808801515160008b815260059092529290206001015490935083925061192c6012600a611f25565b611937906064611fcd565b6119419190611fec565b61194b9190611fec565b905251600280840191909155608084015151835560008681526003602081815260408084206001600160a01b038a1685529091528083208381556001810180546001600160a01b03199081169091559481018054861690559182018054909416909355600401555185907fdb88d4e96cb8697aaee5e575ee5f460817709a1dfcfbf7ba15192e90b5c86f9f906119fc9085908154815260018201546020820152600290910154604082015260600190565b60405180910390a2847fb6ef177c7a6f32b283a49b5e0463a39240cdaa278028dfb219480d050e8ee54c84604051611a7b9190600060a0820190508251825260208301516001600160a01b0380821660208501528060408601511660408501528060608601511660608501525050608083015151608083015292915050565b60405180910390a25050505050565b6000828152600660205260408120600101546001600160a01b031615801590611ae85750600083815260066020908152604091829020600101546001600160a01b031691611add91908501908501611c1e565b6001600160a01b0316145b801561098e575050600091825260066020526040909120549035101590565b6000611b1d82611b178686611b25565b90611b31565b949350505050565b600061098e8284611fcd565b600061098e8284611ec2565b600060608284031215611b4e578081fd5b6040516060810181811067ffffffffffffffff82111715611b7d57634e487b7160e01b83526041600452602483fd5b604052905080611b8d8484611bd1565b8152611b9c8460208501611bd1565b6020820152611bae8460408501611bd1565b60408201525092915050565b600060a08284031215611bcb578081fd5b50919050565b600060208284031215611be2578081fd5b6040516020810181811067ffffffffffffffff82111715611c1157634e487b7160e01b83526041600452602483fd5b6040529135825250919050565b600060208284031215611c2f578081fd5b813561098e8161204e565b600060208284031215611c4b578081fd5b815161098e8161204e565b600060208284031215611c67578081fd5b8151801515811461098e578182fd5b600060608284031215611c87578081fd5b61098e8383611b3d565b600060208284031215611ca2578081fd5b61098e8383611bd1565b60008060408385031215611cbe578081fd5b611cc88484611bd1565b946020939093013593505050565b600060208284031215611ce7578081fd5b5035919050565b600060208284031215611cff578081fd5b5051919050565b60008060408385031215611d18578182fd5b823591506020830135611d2a8161204e565b809150509250929050565b6000808284036060811215611d48578283fd5b833592506040601f1982011215611d5d578182fd5b506020830190509250929050565b60008060808385031215611d7d578182fd5b82359150611d8e8460208501611b3d565b90509250929050565b60008060c08385031215611da9578182fd5b82359150611d8e8460208501611bba565b600080600060e08486031215611dce578081fd5b83359250611ddf8560208601611bba565b915060c0840135611def8161204e565b809150509250925092565b60008060408385031215611e0c578182fd5b50508035926020909101359150565b81358152604081016020830135611e318161204e565b6001600160a01b03811660208401525092915050565b8135815260a081016020830135611e5d8161204e565b6001600160a01b039081166020840152604084013590611e7c8261204e565b9081166040840152606084013590611e938261204e565b166060830152608092830135929091019190915290565b60008219821115611ebd57611ebd612003565b500190565b600082611edd57634e487b7160e01b81526012600452602481fd5b500490565b600181815b80851115611f1d578160001904821115611f0357611f03612003565b80851615611f1057918102915b93841c9390800290611ee7565b509250929050565b600061098e8383600082611f3b57506001610409565b81611f4857506000610409565b8160018114611f5e5760028114611f6857611f84565b6001915050610409565b60ff841115611f7957611f79612003565b50506001821b610409565b5060208310610133831016604e8410600b8410161715611fa7575081810a610409565b611fb18383611ee2565b8060001904821115611fc557611fc5612003565b029392505050565b6000816000190483118215151615611fe757611fe7612003565b500290565b600082821015611ffe57611ffe612003565b500390565b634e487b7160e01b600052601160045260246000fd5b8135815560018101602083013561202f8161204e565b81546001600160a01b0319166001600160a01b03919091161790555050565b6001600160a01b038116811461206357600080fd5b5056fea26469706673582212201b3a0722d07ef081ffedd682c0f53e4e58fe8e5f5b7ee9034b24ef3aea489fee64736f6c63430008040033";

export class Market__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    product_: string,
    currency_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Market> {
    return super.deploy(
      product_,
      currency_,
      overrides || {}
    ) as Promise<Market>;
  }
  getDeployTransaction(
    product_: string,
    currency_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(product_, currency_, overrides || {});
  }
  attach(address: string): Market {
    return super.attach(address) as Market;
  }
  connect(signer: Signer): Market__factory {
    return super.connect(signer) as Market__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new utils.Interface(_abi) as MarketInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Market {
    return new Contract(address, _abi, signerOrProvider) as Market;
  }
}

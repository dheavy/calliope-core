/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Utils, UtilsInterface } from "../Utils";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "str1_",
        type: "string",
      },
      {
        internalType: "string",
        name: "str2_",
        type: "string",
      },
    ],
    name: "areStringEquals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xdcf489d7",
        type: "bytes32",
      },
    ],
    name: "c_0xdcf489d7",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str_",
        type: "string",
      },
    ],
    name: "isEmptyString",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610627610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c8063286c801314610050578063a45f379e14610080578063bde08b75146100b0575b600080fd5b61006a600480360381019061006591906104cd565b6100cc565b604051610077919061058f565b60405180910390f35b61009a60048036038101906100959190610488565b6101af565b6040516100a7919061058f565b60405180910390f35b6100ca60048036038101906100c5919061045f565b6103fd565b005b60006100fa7fe8ce3e1a6eb2a869c3afa7825b1c2ed148a7fc4fe04cc3a648d0f39d0da3788d60001b6103fd565b6101267fa5cc8e2def99728ed5304313915ddde6b59a3a8c1f72f247765488e0d0aa213c60001b6103fd565b6101527f5e3905594c4823fc43908649b477f9d3019867ca30ae2790073029fcde24a45e60001b6103fd565b8282604051602001610165929190610576565b60405160208183030381529060405280519060200120858560405160200161018e929190610576565b60405160208183030381529060405280519060200120149050949350505050565b60006101dd7fb0c3633622360e653b31ae2d195935b7b415a90e67fa66ff1e2cd81a4128d7ab60001b6103fd565b6102097f87b60258556f10522e16cd19f6017ba35794bc8a2a364f731597c7982f8c5c7b60001b6103fd565b6102357f8884038d23782b0045ca29b37ae2f3b4bf0b9343b5ad87d9242033cadbb19a2060001b6103fd565b600083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505090506102aa7f5be80a920e202f01148efc12db33081c0132ce0f32a70a1a6111c6b608ae8f7b60001b6103fd565b6102d67fabe6cb520957f98713434a613088fc4d2b8ba3f5f15c00e88c1c324d68eb4bbf60001b6103fd565b60008151141561036d5761030b7e28f14376a696734b3199d81c2dad41302fa8e8619ce4273b8b9d8bae01c76360001b6103fd565b6103377f5a924200e75cc22e624c7a4796a26ac516aee8e75a1936478b241b82df43e76660001b6103fd565b6103637f33b59347290930491a68d5e47e9ed7c4174b31074adc36ac45b97cd5a92987e760001b6103fd565b60019150506103f7565b6103997ff0497e64f2a6e3753c248c7a062b2717574150d19fb98b739f8442dcfbb0de1760001b6103fd565b6103c57fe8c161eda42d9f58a02ff505a306568dce045e42c9173c729d068be58bcd970060001b6103fd565b6103f17f28e32ada551ce4c3965dc48329b362aa05e42ae2dfc0ac2ebf15c991000aeea060001b6103fd565b60009150505b92915050565b50565b60008135905061040f816105da565b92915050565b60008083601f84011261042757600080fd5b8235905067ffffffffffffffff81111561044057600080fd5b60208301915083600182028301111561045857600080fd5b9250929050565b60006020828403121561047157600080fd5b600061047f84828501610400565b91505092915050565b6000806020838503121561049b57600080fd5b600083013567ffffffffffffffff8111156104b557600080fd5b6104c185828601610415565b92509250509250929050565b600080600080604085870312156104e357600080fd5b600085013567ffffffffffffffff8111156104fd57600080fd5b61050987828801610415565b9450945050602085013567ffffffffffffffff81111561052857600080fd5b61053487828801610415565b925092505092959194509250565b61054b816105b5565b82525050565b600061055d83856105aa565b935061056a8385846105cb565b82840190509392505050565b6000610583828486610551565b91508190509392505050565b60006020820190506105a46000830184610542565b92915050565b600081905092915050565b60008115159050919050565b6000819050919050565b82818337600083830152505050565b6105e3816105c1565b81146105ee57600080fd5b5056fea2646970667358221220f8d33554263ac4d9e88a2c0023faee7fc40beeefa1c35405680bfa7c3f0caddf64736f6c63430008040033";

export class Utils__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Utils> {
    return super.deploy(overrides || {}) as Promise<Utils>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Utils {
    return super.attach(address) as Utils;
  }
  connect(signer: Signer): Utils__factory {
    return super.connect(signer) as Utils__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UtilsInterface {
    return new utils.Interface(_abi) as UtilsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Utils {
    return new Contract(address, _abi, signerOrProvider) as Utils;
  }
}
